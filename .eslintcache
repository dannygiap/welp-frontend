[{"/Users/dannygiap/Desktop/welp-frontend/src/index.tsx":"1","/Users/dannygiap/Desktop/welp-frontend/src/App.tsx":"2","/Users/dannygiap/Desktop/welp-frontend/src/components/home/home.tsx":"3","/Users/dannygiap/Desktop/welp-frontend/src/components/nav/nav.tsx":"4","/Users/dannygiap/Desktop/welp-frontend/src/components/landing/landing.tsx":"5","/Users/dannygiap/Desktop/welp-frontend/src/components/game/game.tsx":"6","/Users/dannygiap/Desktop/welp-frontend/src/components/landing/boxes.tsx":"7","/Users/dannygiap/Desktop/welp-frontend/src/components/restuarant/restuarant.tsx":"8","/Users/dannygiap/Desktop/welp-frontend/src/Socket/Socket.tsx":"9","/Users/dannygiap/Desktop/welp-frontend/src/context/GlobalState.tsx":"10","/Users/dannygiap/Desktop/welp-frontend/src/context/reducers.tsx":"11","/Users/dannygiap/Desktop/welp-frontend/src/context/GameContext.tsx":"12"},{"size":307,"mtime":1611704499095,"results":"13","hashOfConfig":"14"},{"size":716,"mtime":1611800922971,"results":"15","hashOfConfig":"14"},{"size":1368,"mtime":1611801337690,"results":"16","hashOfConfig":"14"},{"size":606,"mtime":1611801182718,"results":"17","hashOfConfig":"14"},{"size":1073,"mtime":1611801678569,"results":"18","hashOfConfig":"14"},{"size":795,"mtime":1611802048339,"results":"19","hashOfConfig":"14"},{"size":258,"mtime":1610949093164,"results":"20","hashOfConfig":"14"},{"size":1316,"mtime":1610949093166,"results":"21","hashOfConfig":"14"},{"size":378,"mtime":1611714801531,"results":"22","hashOfConfig":"14"},{"size":1582,"mtime":1611801753540,"results":"23","hashOfConfig":"14"},{"size":821,"mtime":1611786551355,"results":"24","hashOfConfig":"14"},{"size":659,"mtime":1611801138710,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1mnnd0h",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"/Users/dannygiap/Desktop/welp-frontend/src/index.tsx",[],["54","55"],"/Users/dannygiap/Desktop/welp-frontend/src/App.tsx",[],"/Users/dannygiap/Desktop/welp-frontend/src/components/home/home.tsx",["56"],"import './home.css';\nimport Socket from '../../Socket/Socket';\nimport { useState, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport GameContext from '../../context/GameContext';\nimport uuid from 'react-uuid';\n\nconst Home: React.FC = () => {\n  const [gameID, setGameID] = useState('');\n  const context = useContext(GameContext);\n  useEffect(() => {\n    console.log(context);\n  }, []);\n  let history = useHistory();\n\n  const redirect = () => {\n    console.log('inside redirect');\n    Socket.getSocket().emit('create', uuid());\n    history.push('/game');\n  };\n\n  return (\n    <div id=\"home-container\">\n      <h2 id=\"greeting\">Hi, dannygiap</h2>\n\n      <form\n        id=\"game-form\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (gameID === '') return;\n          //Socket.initializeSocket();\n          Socket.getSocket().emit('join', gameID);\n          history.push('/game');\n        }}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Game ID\"\n          className=\"input\"\n          onChange={(e) => {\n            setGameID(e.target.value);\n          }}\n        />\n        <input type=\"submit\" value=\"Join Game\" className=\"button red\" />\n      </form>\n\n      <button className=\"button blue\" onClick={redirect}>\n        Create Game\n      </button>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/dannygiap/Desktop/welp-frontend/src/components/nav/nav.tsx",[],"/Users/dannygiap/Desktop/welp-frontend/src/components/landing/landing.tsx",[],"/Users/dannygiap/Desktop/welp-frontend/src/components/game/game.tsx",[],"/Users/dannygiap/Desktop/welp-frontend/src/components/landing/boxes.tsx",[],"/Users/dannygiap/Desktop/welp-frontend/src/components/restuarant/restuarant.tsx",[],"/Users/dannygiap/Desktop/welp-frontend/src/Socket/Socket.tsx",[],"/Users/dannygiap/Desktop/welp-frontend/src/context/GlobalState.tsx",["57"],"import React, { useReducer, useEffect } from 'react';\nimport GameContext from './GameContext';\nimport { ACTIONS, gameReducer } from './reducers';\nimport Socket from '../Socket/Socket';\n\n//TODO: add socket handlers and setup reducers\nconst GlobalState = (props) => {\n  const [state, dispatch] = useReducer(gameReducer, {\n    userID: 'yoyoyo',\n    gameID: '',\n    players: [],\n    isStarted: false,\n    isRestaurantRound: false,\n    isVoting: false,\n    restaurants: [],\n  });\n\n  useEffect(() => {\n    console.log(state);\n    Socket.initializeSocket();\n    const socket = Socket.getSocket();\n    socket.on('connected', (data) => {\n      dispatch({ type: ACTIONS.INIT_USER, payload: { id: data.id } });\n      console.log(`id ${data.id} has connected to socket server`);\n    });\n  }, []);\n\n  useEffect(() => {\n    const socket = Socket.getSocket();\n    socket.on('game-created', (data) => {\n      console.log('creating game ');\n      dispatch({\n        type: ACTIONS.CREATE_GAME,\n        payload: { gameID: data.gameID, players: data.players },\n      });\n    });\n\n    socket.on('player-joined', (data) => {\n      console.log('a player joined the game ');\n      dispatch({\n        type: ACTIONS.JOIN_GAME,\n        payload: { gameID: data.gameID, players: data.players },\n      });\n    });\n\n    return () => {\n      socket.removeEventListener('game-created');\n      socket.removeEventListener('player-joined');\n    };\n  }, [state]);\n\n  return (\n    <GameContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </GameContext.Provider>\n  );\n};\n\nexport default GlobalState;\n","/Users/dannygiap/Desktop/welp-frontend/src/context/reducers.tsx",[],"/Users/dannygiap/Desktop/welp-frontend/src/context/GameContext.tsx",["58"],"import React from 'react';\n\ninterface Player {\n  id: string;\n  username: string;\n}\n\n//TODO: define context (what type of state do we need to define)\ninterface GameContext {\n  userID: string;\n  gameID: string;\n  players: string[]; //might change type to Player[] later\n  isStarted: boolean;\n  isRestaurantRound: boolean;\n  isVoting: boolean;\n  restaurants: string[];\n}\n\nexport default React.createContext<{\n  state: GameContext;\n  dispatch: React.Dispatch<any>;\n}>({\n  state: {\n    userID: 'yoyoyo',\n    gameID: '',\n    players: [],\n    isStarted: false,\n    isRestaurantRound: false,\n    isVoting: false,\n    restaurants: [],\n  },\n  dispatch: () => null,\n});\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":13,"column":6,"nodeType":"65","endLine":13,"endColumn":8,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"67","line":26,"column":6,"nodeType":"65","endLine":26,"endColumn":8,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":3,"column":11,"nodeType":"71","messageId":"72","endLine":3,"endColumn":17},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'context'. Either include it or remove the dependency array.","ArrayExpression",["75"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["76"],"@typescript-eslint/no-unused-vars","'Player' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [context]",{"range":"81","text":"82"},"Update the dependencies array to be: [state]",{"range":"83","text":"84"},[421,423],"[context]",[780,782],"[state]"]